/*

T Distribution Calculation
Rev: 2.1
Date: October 12, 2007
Author: Siew Cheng
JMP Version: 5.1.1
Starting Condition: User select input T value or input probability value
Output: If input T value, return probability values as output; if input probability value, return T value as output
Edited by Paul Wenz in March 2007: Change order of p-values to match JMP output
Edited by Siew Cheng in May 2007: To add in T Distibution graph and revise the script align with Z Distibution changes
Edited by Wang fang in Oct 2007: To close the graph bugs, change the fill color from red to black.
*/ 

Clear Globals();
Include("$ADDIN_HOME(com.intel.sos)\libraries\sosglbls.jsl");

tvalue = .;
df = .;
probmoret = .;
problesst = .;
probt = .;
button = 1;
valuet = .;
prob = .;
scale = "T Value";
a = "T Value";
b = "Probability Value";
navy={4/255,48/255,85/255};

scale_expr = Expr(
	result = Dialog(
		title("T Distribution Probability Calculator"),
		"Choose one of the input values below: ",
		type = Radiobuttons(a, b),
		HList(Button("OK"), Button("Cancel"))
	);
	If(result["Button"] == -1,
		Throw("User cancelled")
	);
	Remove From(result);
	Eval List(result);
);

prob_UI_expr = Expr(
	result = Dialog(
		title("T Distribution Probability Calculator"),
		VList(
			"Enter t value and degree of freedom (df) below: ",
			Lineup(2,
				"", "",
				"T value      ", tvalue = EditNumber(tvalue),
				"df      ", df = EditNumber(df)
			),
			" ",
			"T Distribution Probability Calculation: ",
			"",
			Lineup(2,
				"Prob > |t|", probt = editnumber(probt),
				"Prob > t", probmoret = editnumber(probmoret),
				"Prob < t", problesst = editnumber(problesst)
			),
			"",
			HList(button("OK"), button("Cancel"))
		)
	);
	If(result["Button"] == -1,
		Throw("User cancelled")
	);
	Remove From(result);
	Eval List(result);
);

t_UI_expr = Expr(
	result = Dialog(
		title("T Value Calculator"),
		VList(
			"Enter the upper tail area probability and df below: ",
			Lineup(2, "", "", "Probability", prob = EditNumber(prob), "df", df = EditNumber(df)),
			" ",
			"T Value Calculation: ",
			"",
			Lineup(2, "T Value        ", valuet = editnumber(valuet)),
			"",
			"Note: The probability is the area to the RIGHT of t. ",
			"",
			HList(button("OK"), button("Cancel"))
		)
	);
	If(result["Button"] == -1,
		Throw("User cancelled")
	);
	Remove From(result);
	Eval List(result);
);

disp_type1_expr = Expr(
	New Window("T Distribution",
		H List Box(
			Outline Box("Prob>|t|",
				Graph Box(
					FrameSize(200, 120),
					X Scale(-4, 4),
					Y Scale(0, 1.2 * t Density(0, df, 0)),
					X Name("T"),
					Y Name(""),
					Y Function(t Density(x, df, 0), x),
					Fill Color(navy),
					Y Function(If(Abs(x) > Abs(tvalue), t Density(x, df, 0), 0), x, fill(1, 0));
				)
			),
			Outline Box("Prob>t",
				Graph Box(
					FrameSize(200, 120),
					X Scale(-4, 4),
					Y Scale(0, 1.2 * t Density(0, df, 0)),
					X Name("T"),
					Y Name(""),
					Y Function(t Density(x, df, 0), x),
					Fill Color(navy),
					Y Function(If(x > tvalue, t Density(x, df, 0), 0), x, fill(1, 0));
				)
			),
			Outline Box("Prob<t",
				Graph Box(
					FrameSize(200, 120),
					X Scale(-4, 4),
					Y Scale(0, 1.2 * t Density(0, df, 0)),
					X Name("T"),
					Y Name(""),
					Y Function(t Density(x, df, 0), x),
					Fill Color(navy),
					Y Function(If(x < tvalue, t Density(x, df, 0), 0), x, fill(1, 0))
                                                      
					;
				)
			)
		),
		FooterBox
	)
);

disp_type2_expr = Expr(
	New Window("T Distribution",
		Outline Box("T Value",
			Graph Box(
				FrameSize(200, 120),
				X Scale(-4, 4),
				Y Scale(0, 1.2 * t Density(0, df, 0)),
				X Name("T"),
				Y Name(""),
				Y Function(t Density(x, df, 0), x),
				Pen Color(navy),
				Line({xxx, 0}, {xxx, t Density(xxx, df, 0)}),
				Fill Color(navy),
				Y Function(If(x > xxx, t Density(x, df, 0), 0), x, fill(1, 0));
			)
		),
		Text Box(" P(X>" || Char(valuet) || ")=" || Char(prob)),
		FooterBox
	)
);

///////////////////////////////////////////////////////////////////////////////////////////////Main/////////////////////////////////////////////////////////////////////////////////////////////////////
While(button == 1,
	Eval(scale_expr);
	If(type == 1, scale = a);
	If(type == 2, scale = b);
	While(button == 1,
		If(scale == "Probability Value",
			Eval(t_UI_expr);
			If(prob >= 1 | prob <= 0,
				Dialog(Title("Error"), "Probability value must be between 0 and 1", button("OK"))
			);
			If(Is Missing(prob) | Is Missing(df),
				Dialog(Title("Error"), "Missing Value!", button("OK"))
			);
			If(df <= 0,
				Dialog(Title("Error"), "df must be greater than 0", button("OK"))
			);
			valuet = Round(-t Quantile(prob, df, 0), 4);
			Eval(Substitute(Name Expr(disp_type2_expr), Expr(xxx), valuet, Expr(df), df));
		);
		If(scale == "T Value",
			Eval(prob_UI_expr);
			If(df <= 0,
				Dialog(Title("Error"), "df must be greater than 0", button("OK"))
			);
			If(Is Missing(tvalue) | Is Missing(df),
				Dialog(Title("Error"), "Missing Value!", button("OK"))
			);
			probmoret = Round(1 - t Distribution(tvalue, df, 0), 4);
			problesst = Round(t Distribution(tvalue, df, 0), 4);
			probt = Round((1 - t Distribution(Abs(tvalue), df, 0)) * 2, 4);
			Eval(Substitute(Name Expr(disp_type1_expr), Expr(tvalue), tvalue, Expr(df), df));
		);
	);
);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
